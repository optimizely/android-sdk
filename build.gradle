/*
 * Copyright 2016, Optimizely
 * <p/>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p/>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p/>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    def bintray_user = System.getenv('BINTRAY_USER')
    def bintray_api_key = System.getenv('BINTRAY_API_KEY')
    def version_name = System.getenv('TRAVIS_TAG')
    if (bintray_user != null && bintray_api_key != null && version_name != null) {
        rootProject.ext.bintray_user = bintray_user
        rootProject.ext.bintray_api_key = bintray_api_key
        rootProject.ext.version_name = version_name
    } else {
        rootProject.ext.bintray_user = ''
        rootProject.ext.bintray_api_key = ''
        rootProject.ext.version_name= ''
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

ext {
    compile_sdk_version = 24
    build_tools_version = "24.0.3"
    min_sdk_version = 10
    target_sdk_version = 24

    java_core_ver = "1.2.0"
    android_logger_ver = "1.3.1"
    support_annotations_ver = "24.2.1"
    junit_ver = "4.12"
    mockito_ver = "1.9.5"
    support_test_runner_ver = "0.5"
    dexmaker_ver = "1.2"
    espresso_ver = "2.2.2"
    gson_ver = "2.6.2"
    group_id = "com.optimizely.ab"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task ship() {
    dependsOn(':android-sdk:uploadArchives', ':shared:uploadArchives',
            'event-handler:uploadArchives', 'user-profile:uploadArchives')
}

task cleanAllModules << {
    logger.info("Running clena for all modules")
}

cleanAllModules.dependsOn(':android-sdk:clean', ':event-handler:clean',
        ':user-profile:clean', ':shared:clean')

task testAllModules << {
    logger.info("Running android tests for all modules")
}

task testAllModulesTravis << {
    logger.info("Running android tests for Travis")
}

testAllModulesTravis.dependsOn(':android-sdk:connectedAndroidTest', ':android-sdk:test',
        ':event-handler:connectedAndroidTest', ':event-handler:test',
        ':user-profile:connectedAndroidTest', ':shared:connectedAndroidTest')

testAllModules.dependsOn('testAllModulesTravis', ':test-app:connectedAndroidTest')